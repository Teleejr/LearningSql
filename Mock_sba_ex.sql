/*SELECT * FROM ITEMS; SELECT * FROM ORDERS; SELECT * FROM ORDER_ITEMS; SELECT * FROM STORES;
/*1. */
SELECT * FROM ORDERS WHERE USER_ID = (SELECT USER_ID FROM USERS WHERE FIRST_NAME = 'Marion');
/*2. */
SELECT * FROM USERS WHERE USER_ID NOT IN (SELECT USER_ID FROM ORDERS);
/*3. */
SELECT NAME, Trim(TRAILING '.' from Trim(TRAILING 0 from PRICE)) AS 'Price' FROM ITEMS JOIN ORDER_ITEMS ON ORDER_ITEMS.ITEM_ID = ITEMS.ITEM_ID GROUP BY 1;
/*4. */
SELECT oi.ORDER_ID, it.NAME, Trim(TRAILING '.' from Trim(TRAILING 0 from it.PRICE)) AS 'Price', oi.QUANTITY FROM ORDER_ITEMS AS oi
JOIN ITEMS AS it ON it.ITEM_ID = oi.ITEM_ID
JOIN ORDERS AS o ON o.ORDER_ID = oi.ORDER_ID
JOIN STORES AS st ON st.STORE_ID = o.STORE_ID
WHERE st.CITY = 'New York'
ORDER BY oi.ORDER_ID;
/*5. */
SELECT it.NAME AS 'ITEM_NAME', SUM(it.PRICE * ot.QUANTITY) AS 'REVENUE' FROM ITEMS AS it
JOIN ORDER_ITEMS AS ot ON it.ITEM_ID = ot.ITEM_ID GROUP BY ITEM_NAME ORDER BY SUM(it.PRICE * ot.QUANTITY) desc;
/*6. Use CASE*/
SELECT st.NAME, COUNT(o.STORE_ID) AS 'ORDER_QUANTITY' FROM STORES AS st
JOIN ORDERS AS o ON st.STORE_ID = o.STORE_ID;

